/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.49
 * Generated at: 2019-12-18 00:38:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class resetPassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/4학년2학기/웹플응용텀프/apache-tomcat-8.0.49/webapps/test/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1575863180000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>인테리어소품 코제트</title>\r\n");
      out.write("<link href=\"../../css/login.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<style>\r\n");
      out.write("table.type03 {\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    line-height: 1.5;\r\n");
      out.write("    border-left: 3px solid #369;\r\n");
      out.write("  \tmargin : 20px 10px;\r\n");
      out.write("  \tfont-size : 1.3em;\r\n");
      out.write("}\r\n");
      out.write("table.type03 th {\r\n");
      out.write("    width: 147px;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    vertical-align: top;\r\n");
      out.write("    color: #153d73;\r\n");
      out.write("}\r\n");
      out.write("table.type03 td {\r\n");
      out.write("    width: 349px;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    vertical-align: top;\r\n");
      out.write("    color: #555;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//비밀번호 미 입력시\r\n");
      out.write("function check(){\r\n");
      out.write("\tvar form = document.form1;\r\n");
      out.write("\tvar password = document.getElementById('password').value.trim();\r\n");
      out.write("\tif(password.length ==0){\r\n");
      out.write("\t\talert(\"새 비밀번호를 입력해주세요\");\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tform.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("/* //한 번 더 묻기\r\n");
      out.write("function subCheck(){\r\n");
      out.write("\tvar form = document.form1;\r\n");
      out.write("\tif (confirm(\"비밀번호를 변경하시겠습니까?\") == true){\r\n");
      out.write("\t    form.submit();\r\n");
      out.write("\t}\telse{\r\n");
      out.write("\t\t}\r\n");
      out.write("} */\r\n");
      out.write("\r\n");
      out.write("function validatePassword() {\r\n");
      out.write("\tvar password = document.getElementById('password').value.trim();\r\n");
      out.write("\tvar alertEl = document.getElementById('password_alert');\r\n");
      out.write("\t\r\n");
      out.write("// 비밀번호 입력 여부 검증\r\n");
      out.write("if (password.length == 0) {\r\n");
      out.write("\talertEl.innerHTML = '필수 정보입니다.';\r\n");
      out.write("\talertEl.style.display = 'block';\r\n");
      out.write("\t\r\n");
      out.write("\treturn false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 비밀번호 길이 검증\r\n");
      out.write("if (password.length < 5) {\r\n");
      out.write("\talertEl.innerHTML = '비밀번호는 5글자 이상 입력해주세요.';\r\n");
      out.write("\talertEl.style.display = 'block';\r\n");
      out.write("\talertEl.style.color =\"red\";\r\n");
      out.write("\t\r\n");
      out.write("\treturn false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 비밀번호 대소문자, 숫자 입력 검증\r\n");
      out.write("if (!/^[A-Za-z0-9!?#$%]*$/.test(password)) {\r\n");
      out.write("\talertEl.innerHTML = '비밀번호는 영문 대문자,소문자, 숫자만 입력 가능합니다.';\r\n");
      out.write("\talertEl.style.display = 'block';\r\n");
      out.write("\talertEl.style.color =\"red\";\r\n");
      out.write("\t\r\n");
      out.write("\treturn false;\r\n");
      out.write("}\r\n");
      out.write("\talertEl.style.display = 'none';\r\n");
      out.write("}\r\n");
      out.write("function validatePassword2() \r\n");
      out.write("{\r\n");
      out.write("\tvar password = document.getElementById('password').value.trim();\r\n");
      out.write("\tvar password2 = document.getElementById('password2').value.trim();\r\n");
      out.write("\tvar alertEl = document.getElementById('password2_alert');\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("// 비밀번호 길이 검증\r\n");
      out.write("if (password2.length < 5) {\r\n");
      out.write("\talertEl.innerHTML = '비밀번호는 5글자 이상 입력해주세요.';\r\n");
      out.write("\talertEl.style.display = 'block';\r\n");
      out.write("\talertEl.style.color =\"red\";\r\n");
      out.write("\t\r\n");
      out.write("\treturn false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 비밀번호 대소문자, 숫자 입력 검증\r\n");
      out.write("if (!/^[A-Za-z0-9!?#$%]*$/.test(password2)) {\r\n");
      out.write("\talertEl.innerHTML = '비밀번호는 영문 대문자,소문자, 숫자만 입력 가능합니다.';\r\n");
      out.write("\talertEl.style.display = 'block';\r\n");
      out.write("\talertEl.style.color =\"red\";\r\n");
      out.write("\t\r\n");
      out.write("\treturn false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// 비밀번호, 비밀번호 확인 검증\r\n");
      out.write("if (password != password2) {\r\n");
      out.write("\talertEl.innerHTML = '비밀번호가 일치하지 않습니다.';\r\n");
      out.write("\talertEl.style.display = 'block';\r\n");
      out.write("\talertEl.style.color =\"red\";\r\n");
      out.write("\t\r\n");
      out.write("\treturn false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("alertEl.style.display = 'none';\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");

	request.setCharacterEncoding("utf-8");
	String id = request.getParameter("id");

      out.write('\r');
      out.write('\n');
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      boolean _jspx_th_c_005fset_005f0_reused = false;
      try {
        _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fset_005f0.setParent(null);
        // /jsp/login/resetPassword.jsp(131,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setVar("memberId");
        // /jsp/login/resetPassword.jsp(131,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setValue(id );
        int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
        if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
        _jspx_th_c_005fset_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
      }
      out.write("\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../form/header.jsp", out, true);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"reset_password_wrap\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t<form action=\"resetPasswordResult.jsp?memberId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" method=\"post\" name=\"form1\">\r\n");
      out.write("\t\t<p class=\"title\">S E A R C H &nbsp;&nbsp; P A S S W O R D</p>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<p class=\"p\">비밀번호 재설정</p>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<table class=\"type03\" border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\r\n");
      out.write("\t\t \r\n");
      out.write("        <tr>\r\n");
      out.write("        <th bgcolor=\"#eeeeee\" scope=\"row\">아이디</th>\r\n");
      out.write("\t\t\t<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("        \r\n");
      out.write("        <tr>\r\n");
      out.write("          <th bgcolor=\"#eeeeee\" scope=\"row\">새 비밀번호</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          <span>\r\n");
      out.write("               <input type=\"password\" name=\"password\" id=\"password\" class=\"input-text\" placeholder=\"새 비밀번호\" maxlength=\"20\" onfocusout=\"validatePassword()\"/>\r\n");
      out.write("    \t  </span>      \r\n");
      out.write("    \t  <div id=\"password_alert\" class=\"alert\"> 공백없이 5~15자의 영문/숫자</div>\r\n");
      out.write("         </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("          <th bgcolor=\"#eeeeee\" scope=\"row\">새 비밀번호 확인</th>\r\n");
      out.write("          <td>\r\n");
      out.write("            <span>\r\n");
      out.write("            <input type=\"password\" name=\"password2\" id=\"password2\" class=\"input-text\" placeholder=\"새 비밀번호 확인\" maxlength=\"20\" onfocusout=\"validatePassword2()\"/>\r\n");
      out.write("            </span>\r\n");
      out.write("          </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("\t\t<div class=\"button-area\" style=\"margin-left: 5px;\">\r\n");
      out.write("\t\t\t<input type=\"button\" class=\"button01\" onclick=\"check();\" value=\"비밀번호 변경\"> \r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<div class=\"button-area\" style=\"margin-left: 20px;\">\r\n");
      out.write("\t\t\t<a href=\"../index/index.jsp\" class=\"button01\">취소</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../form/footer.jsp", out, true);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
